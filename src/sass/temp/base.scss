@mixin gallery-logo ($width: 3rem) {
	display: flex;
	flex-wrap: wrap;
	align-items: center;
	justify-content: space-around;

	margin-left: 0;
	list-style: none;

	> * {
		margin: 0 var(--spacing-small) var(--spacing-default);

		figure {
			margin: 0;
		}

		img {
			width: $width;
		}
	}

	a {
		img {
			transform: translate(0, 0);
			transition: transform .25s ease;
		}

		&:hover img {
			transform: translate(0, -1rem);
		}
	}
}

@mixin img-polaroid {
	background: white;

	display: block;
	padding: var(--spacing-small) var(--spacing-small) var(--spacing-large);

	transform: rotate(0deg) translate(0, 0) scale(1);
	box-shadow: 0 0.25rem .5rem rgba(0, 0, 0, .4);
	transition: transform .5s ease, box-shadow .5s ease;

	&:hover {
		transform: rotate(0deg) translate(0, 0) scale(1.1);
		box-shadow: 0 0.25rem 1rem rgba(0, 0, 0, .4);
	}
}

@mixin text-color ($color: white) {
	color: $color;

	// Make sure any potential list separator (like |) doesn't inherit currentColor on :hover
	> :after {
		color: $color;
	}

	a:not(:hover),
	:--heading {
		color: currentColor;
	}
}

@mixin fade-in {
	transform: translate(0, 0);
	opacity: 1;
}

@mixin fade-in-children ($num: 5, $delay: 0s) {
	> * {
		transform: translate(0, 1.5rem);
		opacity: 0;
		transition-delay: $delay;
		transition: transform 0.75s ease,
					opacity 0.75s ease;
	}

	@for $i from 1 through $num {
		> :nth-child(#{$i}) {
			transition-delay: #{$i * .25s + $delay};
		}
	}

	&.was-in-view {
		> * {
			@include fade-in;
		}
	}
}

// Helper mixins
@mixin full-height ($valign: center, $align: flex-start) {
	min-height: 100vh;
	display: flex;
	align-items: $align;
	justify-content: $valign;
	flex-direction: column;

	> * {
		width: 100%;
	}

	@if ($align == center) {
		text-align: center;
	}
}

@mixin text-label {
	font-size: var(--font-size-small);
	text-transform: uppercase;
}

@mixin first-p {
	font-size: var(--font-size-large);
	font-weight: bold;
}

@mixin card {
	background: white;
	padding: var(--spacing-large);
	margin: 0 0 var(--spacing-large);
	border-radius: .5rem;
	box-shadow: 0 1rem 2rem rgba(0, 0, 0, .4);
}

@mixin card-large {
	@include card;

	@media (--tablet) {
		padding: var(--spacing-section);
	}
}

@mixin header-module {
	margin-bottom: var(--spacing-x-large);
	text-align: center;

	p:first-of-type {
		@include first-p;
	}
}

@mixin post ($animation: false) {
	position: relative;
	margin-bottom: var(--spacing-x-large);

	figure {
		margin-bottom: var(--spacing-large);

		a {
			display: block;
			width: 100%;
			height: 100%;
			position: relative;
			overflow: hidden;
			transform: translate(0, 0) scale(1);
			transition: transform .5s ease;
			box-shadow: 0 1rem 2rem rgba(0, 0, 0, .4);

			img {
				transform: scale(1);
				transition: transform .5s ease;
			}

			&:hover {
				transform: translate(0, 0) scale(0.95);

				img {
					transform: scale(1.2);
				}
			}
		}
	}

	header {
		h3 {
			margin: 0;
		}

		p {
			@include list-separated(' â€¢ ');
			@include text-label;
			@include text-color(var(--color-gray));
		}
	}

	footer {
		a {
			@extend .button;
		}
	}

	@media (--tablet) {
		padding: var(--spacing-large) 0;
		padding-left: calc(50% + var(--spacing-large) / 2);

		figure {
			position: absolute;
			left: calc(var(--spacing-large) * -1);
			top: 0;
			bottom: 0;
			width: calc(50% - var(--spacing-large) / 2);
			margin: 0;

			img {
				@include img-background;

				z-index: auto;
			}
		}

		&:nth-child(odd) {
			padding-left: 0;
			padding-right: calc(50% + var(--spacing-large) / 2);

			figure {
				left: auto;
				right: calc(var(--spacing-large) * -1);
			}
		}
	}

	// Animation
	@if ($animation) {
		header figure,
		header h3,
		header p,
		> p,
		footer {
			transform: translate(0, 1.5rem);
			opacity: 0;
			transition: transform 0.75s ease,
						opacity 0.75s ease;
		}

		header h3 {
			transition-delay: .5s;
		}

		header p {
			transition-delay: .75s;
		}

		> p {
			transition-delay: 1s;
		}

		footer {
			transition-delay: 1.5s;
		}

		@media (--laptop) {
			header figure {
				transform: translate(-2.5rem, 0);
			}

			&:nth-child(odd) {
				header figure {
					transform: translate(2.5rem, 0);
				}
			}
		}

		&.was-in-view {
			header figure,
			header h3,
			header p,
			> p,
			footer {
				transform: translate(0, 0);
				opacity: 1;
			}
		}
	}
}

// Some basic styling
html {
	@media (--tablet-max) {
		font-size: 80%;
	}
}

h2 {
	small {
		display: block;
		font-weight: 300;
		font-size: 100%;
	}
}
